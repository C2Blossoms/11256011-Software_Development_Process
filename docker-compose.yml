services:
  # 1. Backend Service (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: go-backend
    env_file:
      - .env
    environment:
      DB_HOST: ${MYSQL_HOST}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      DB_PORT: ${MYSQL_PORT}
      PORT: ${PORT}
      APP_ENV: ${APP_ENV}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ACCESS_TTL_MIN: ${ACCESS_TTL_MIN}
      REFRESH_TTL_DAY: ${REFRESH_TTL_DAY}
      DB_AUTOMIGRATE: ${DB_AUTOMIGRATE}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  # 2. Frontend Service (HTML/CSS/JavaScript)
  # frontend:
  #   image: nginx:latest
  #   container_name: frontend-webserver
  #   ports:
  #     - "80:80"
  #   networks:
  #     - ecommerce-network
  #   volumes:
  #     - ./frontend:/usr/share/nginx/html:ro
  #   restart: unless-stopped

  # 3. Database Service (MySQL)
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    # ports:
      # - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - ecommerce-network
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
  
  phpmyadmin:
    image: phpmyadmin:5
    container_name: pma
    env_file:
      - .env
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql_data:
