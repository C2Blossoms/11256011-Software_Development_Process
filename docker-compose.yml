version: "3.9"

x-healthcheck-mysql: &mysql_hc
  test:
    [
      "CMD-SHELL",
      "mysqladmin ping -h 127.0.0.1 -uroot -p$${MYSQL_ROOT_PASSWORD} --silent",
    ]
  interval: 5s
  timeout: 3s
  retries: 20
  start_period: 5s

services:
  # 1. Backend Service (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DB_HOST: ${MYSQL_HOST}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      DB_PORT: ${MYSQL_PORT}
      PORT: ${BACKEND_PORT}
      APP_ENV: ${APP_ENV}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      ACCESS_TTL_MIN: ${ACCESS_TTL_MIN}
      REFRESH_TTL_DAY: ${REFRESH_TTL_DAY}
      DB_AUTOMIGRATE: ${DB_AUTOMIGRATE}
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    init: true

  # 2. Frontend Service (NGINX)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8000
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "8080:3000"
    depends_on:
      - backend
    restart: unless-stopped
    init: true

  # 3. Database Service (MySQL) - DISABLED (using external database at 100.85.81.73)
  # mysql:
  #   image: mysql:8.0
  #   env_file: .env
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   healthcheck: *mysql_hc
  #   restart: unless-stopped
  #   init: true

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:5.2
  #   env_file: .env
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_PORT: ${MYSQL_PORT}
  #     UPLOAD_LIMIT: ${UPLOAD_LIMIT}
  #   ports:
  #     - "${PHPMYADMIN_PORT}:80"
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   restart: unless-stopped

# volumes:
#   mysql_data:
