version: '3.8'
# ลบ version attribute ออก เพื่อหลีกเลี่ยง warning
services:
  # 1. Backend Service (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: go-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=${MYSQL_HOST}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_PORT=${MYSQL_PORT}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  # 2. Frontend Service (HTML/CSS/JavaScript)
  # frontend:
  #   image: nginx:latest
  #   container_name: frontend-webserver
  #   ports:
  #     - "80:80"
  #   networks:
  #     - ecommerce-network
  #   volumes:
  #     - ./frontend:/usr/share/nginx/html:ro
  #   restart: unless-stopped

  # 3. Database Service (MySQL)
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    healthcheck: # <--- เพิ่ม healthcheck เพื่อให้ Docker Compose รู้ว่าเมื่อไหร่ที่ service พร้อม
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - ecommerce-network
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  # 4. Database Management Tool (phpMyAdmin)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8080:80"
    env_file:
      - .env
    environment:
      - PMA_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network
    volumes:
      - ./config.inc.php:/etc/phpmyadmin/config.user.inc.php
    restart: unless-stopped
      
networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql_data:
